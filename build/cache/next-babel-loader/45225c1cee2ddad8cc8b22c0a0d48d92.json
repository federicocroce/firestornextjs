{"ast":null,"code":"import firebase from 'firebase';\n\ntry {\n  firebase.initializeApp({\n    apiKey: 'AIzaSyDINSbmIwTdqRE7yDhkow46fs3JxW5y8KM',\n    authDomain: 'test-74eeb.firebaseapp.com',\n    databaseURL: 'https://test-74eeb.firebaseio.com',\n    projectId: 'test-74eeb',\n    storageBucket: 'test-74eeb.appspot.com',\n    messagingSenderId: '984496005171',\n    appId: '1:984496005171:web:1223101227209a12284346',\n    measurementId: 'G-H81H426MJZ'\n  });\n} catch (err) {\n  // we skip the \"already exists\" message which is\n  // not an actual error when we're hot-reloading\n  if (!/already exists/.test(err.message)) {\n    console.error('Firebase initialization error raised', err.stack);\n  }\n}\n\nconst firebaseApp = firebase;\nconst db = firebaseApp.firestore(); // export const get = async () => {\n//   console.log(\"G 1\");\n//   return db.collection(\"test\").get().then((querySnapshot) => {\n//     console.log(\"G 2\");\n//     return querySnapshot.forEach((doc) => {\n//       console.log(\"G 3\");\n//       console.log(`${doc.id} => ${doc.data()}`);\n//       return \"Fede\"\n//     });\n//   })\n// };\n\nexport const get2 = async () => {\n  console.log(\"G 1\");\n  const res = await db.collection(\"test\").get();\n  res.then(querySnapshot => {\n    console.log(\"G 2\");\n    const data = {};\n    querySnapshot.forEach(doc => {\n      console.log(\"G 3\");\n      console.log(`${doc.id} => ${doc.data()}`);\n      data = doc.data();\n    });\n    console.log(\"G 4\");\n  });\n};\nexport const getB = async () => {\n  try {\n    console.log('getB1');\n    const data = await get2();\n    console.log('getB2', data); // return res.status(200).json(data)\n  } catch (error) {\n    console.error(error); // return res.status(500).json({ error })\n  }\n};\nexport const test = async () => {\n  // console.log('TEST')\n  return {\n    data: 'DATA'\n  };\n};\nexport const get = async () => {\n  const snapshot = await db.collection('test').get();\n  const data = {};\n  snapshot.docs.map(doc => {\n    Object.assign(data, {\n      [doc.id]: doc.data()\n    });\n  });\n  return data;\n};\nexport const fetch = async (collection, setData) => {\n  db.collection(collection).onSnapshot(querySnapshot => {\n    var data = [];\n    querySnapshot.forEach(function (doc) {\n      data.push(doc.data().data);\n    });\n    console.log(data);\n    setData(data);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}